---
layout: post
title: 【笔记】Spring Boot in Action
date: 2018-07-26 15:32:24.000000000 +08:00
---

### 说明

一开始是在看《Thinging in Java》英文版的，一开始看的有点慢，不过坚持下去后面就好了，看了几章觉得有点小无聊，但是还有蛮多收获的，比如实例的方法内部之所以能使用this关键字是因为编译器默认把this当做0号参数传递进去了，如果static方法也把对象自己传递进去，那么也能像实例方法那样使用，不过这么做的话还不如直接定义个实例方法，去掉static关键字。想想自己刚入职，要不先常用的工具和框架先了解一遍，后面有了更多的实践经验再来看这些理论基础，可以进一步提升。然后就选择了Spring Boot作为切入点，最近工作的时候时常用到这个框架，确实是很方便。之前有开发过一段时间的PHP，然后工作后就开始换到Java过来，前期总觉得PHP的上手和初期开发都比Java方便太多了。特别是用了Spring之后，总觉得PHP没有Spring那么多的配置，那么复杂的理论基础，各种DI、IoC和AOP之类的，总之这些对于新手来说不是很友好。不过后来接触了Spring Boot让我觉得它和Yii2框架有点类似了，都是可以分钟就能搭建好项目框架，然后快速开发，除了基本的数据库信息的配置之外，并没有额外的过多配置。可能这也是Spring团队开发Spring Boot的原因之一吧，毕竟Spring发展了这么多年，是时候进行一番瘦身了，而Spring Boot就是这番瘦身之后的成果，还不错。先好好了解了解，才能更快的在工作中熟练使用它，毕竟初入职场，工作重要嘛。

我看是英文版的《Spring Boot in Action》，每次看英文的书籍都是这样，一开始可能比较手生，但是看个几十页之后就快起来了，有时候三四行的长句都不带停顿的就看懂了，这归功于高中英语老师天天教我们拆分各种从句的结果。

### 第一章 启动你的Spring

显示重新回顾了Spring，然后将了几种安装Spring Boot的方法，以及它的一些迷人的特性，主要包括：
- 自动配置，简化了很多的模板化的配置信息，这也是Spring Boot从表面上能够大幅度瘦身Spring的功能之一
- 依赖套餐，就是一些starter依赖，每个starter都是一个套餐，它们都包含了实现相应功能需要的所有具体依赖，也就是说starter其实是个依赖集合。比如你使用了web starter这个依赖，它会帮你联动依赖好一些mvc、视图之类的依赖，同时处理好版本的兼容问题，你不需要去关注具体工作依赖的版本号和依赖名称之类的。这也是瘦身的功能之一。

至于如何安装Spring Boot，不同的系统有不同的方法，但有一些方法是不区分平台的，比如我在Mac下，可以这样：
- 安装sdkman，一个软件开发工具管理器
- 然后使用sdkman安装springboot，可以使用spring --version来查看Spring Boot的当前版本号
- 当然，作为一台合格のMac，你也可以使用brew来安装Spring Boot，这里不详述，还有其他的方法也可以安装Spring Boot

安装完Spring Boot的运行环境之后，就是如何初始化它了，说是初始化，其实就是如何搭建初始框架，然后快速进行开发。有几种方法：
- 使用Spring Boot CLI提供的命令行工具，配合一些参数就可以生成一个Spring Boot框架结构了
- 通过IDEA来进行创建
- 通过Spring Tool套件
- 在http://start.spring.io 上面快速搞定，推荐。这里就是通过最后一种方法，在start网上进行初始化的。

### 第二章 使用Spring Boot开发第一个应用

如前一章所述，在http://start.spring.io 上面配置好之后就得到一个zip的压缩包，下载解压然后就可以开始开发了。打开其中带有main入口函数的Application类，就可以看到这个注解：@SpringBootApplication，看起来就来头不一样，它绑定了这么几个注解标签：
- @Configuration 指定一个类为基于Java配置的类，虽然以前还用过基于XML的配置方式，但是使用Java代码来进行配置显然更加符合习惯，也可以更好满足一些强迫症患者
- @ComponentScan 译之为组件扫描，也就是开启组件扫描的功能，如果你之前使用过Spring的话，应该在XML配置里面见过类似的配置语句。它会对包中含有@Component、@Service、@Repository、@Mapper、@Entity之类的类进行扫描，然后实例化相应的bean装进IoC容器里面以备使用。
- @EnableAutoConfiguration 多么明显，就是说开启自动配置。有了它，你只需要简单的配置一下数据库信息(甚至连数据库都不需要配置)，就可以直接跑个什么管理系统或者小型的销售系统了。它帮你自动配置了大部分常见的模板类的配置内容，这些东西以前在Spring里面经常每开一个一个新项目都要重新写一遍，而且每一次重写的内容并没有太大的区别，除了一些密码和名称之外的信息。

还有几个测试相关的注解，主要有：
- 
- 

然后就是一些常规配置项了，比如端口号……
